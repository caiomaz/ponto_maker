x-backend-env: &backend-env
  DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret}
  DJANGO_DEBUG: "True"
  DJANGO_ALLOWED_HOSTS: "*"
  DB_ENGINE: django.db.backends.postgresql
  DB_NAME: ${DB_NAME:-ponto}
  DB_USER: ${DB_USER:-ponto}
  DB_PASSWORD: ${DB_PASSWORD:-ponto123}
  DB_HOST: db
  DB_PORT: 5432
  DJANGO_STATIC_ROOT: /app/staticfiles
  DJANGO_MEDIA_ROOT: /app/media
  TZ: ${TZ:-America/Sao_Paulo}

networks:
  proxy:
    external: true
  internal:
    driver: bridge

services:
  db:
    image: postgres:15-alpine
    container_name: ponto-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-ponto}
      POSTGRES_USER: ${DB_USER:-ponto}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ponto123}
      TZ: ${TZ:-America/Sao_Paulo}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  backend:
    build:
      context: .
    container_name: ponto-backend
    init: true
    restart: unless-stopped
    environment:
      <<: *backend-env
    volumes:
      - ./:/app
      - static_data:/app/staticfiles
      - media_data:/app/media
    ports:
      - "${BACKEND_HTTP_PORT:-8000}:8000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; socket.create_connection(('127.0.0.1', 8000), 2).close()"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - internal
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.ponto.rule=Host(`ponto.seu-dominio.com`)
      - traefik.http.routers.ponto.entrypoints=websecure
      - traefik.http.routers.ponto.tls=true
      - traefik.http.services.ponto.loadbalancer.server.port=8000

volumes:
  postgres_data:
  static_data:
  media_data:
